[tox]
project = Vagrantenv (TestVM)
minversion = 3.7.0
skipsdist = true
envlist = py3,linters
skip_missing_interpreters = true


[testenv]
changedir = {toxinidir}
basepython = python3
setenv =
    VIRTUAL_ENV = {envdir}
    PYTHONDONTWRITEBYTECODE = 1
    PYTHONWARNINGS = ignore
    VIRTUALENV_NO_DOWNLOAD = 1
    PIP_CONFIG_FILE = .pip.conf
passenv =
    USERPROFILE
    HOME
sitepackages = False
whitelist_externals =
    find
deps =
    shellcheck-py==0.7.1.1
    yamllint==1.26.0
    mkdocs==1.1.2
    ansible-lint[community]==5.3.2
    pymdown-extensions==8.1.1
    Pygments==2.8.0
parallel_show_output = true
commands =
    - find . -type f -name "*.pyc" -delete
    - find . -type d -name "__pycache__" -delete
    {envpython} -m pip check


[testenv:linters]
description = Execute all project linters
deps =
    pre-commit==2.8.2
    yamllint==1.26.0
    shellcheck-py==0.7.1.1
    ansible-lint[community]==5.3.2
    mkdocs==1.1.2
    pymdown-extensions==8.1.1
commands =
    {envpython} -m pre_commit run {posargs:--all-files --verbose}


[testenv:vagrantlint]
description = Vagrantfile linter
deps =
    pre-commit==2.8.2
commands =
    {envpython} -m pre_commit run --hook-stage manual vagrantlint


[testenv:rubocoplint]
description = Ruby linter
deps =
    pre-commit==2.8.2
commands =
    {envpython} -m pre_commit run --all-files \
        --hook-stage manual rubocoplint


[testenv:docs]
description = Project documentation
deps =
    mkdocs==1.1.2
    pymdown-extensions==8.1.1
    Pygments==2.8.0
commands =
    {envpython} -m mkdocs serve {posargs}


[testenv:jenkins]
description = Jenkins CI
recreate = true
commands =
    {envpython} -m pre_commit run --all-files --verbose
    {envpython} -m mkdocs build --strict


[testenv:venv]
description = Any local command in virtualenv
commands = {posargs}
