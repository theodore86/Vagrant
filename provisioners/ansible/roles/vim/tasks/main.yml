---
- name: 'Remove VIM-tiny package'
  apt:
    name: 'vim-tiny'
    state: 'absent'
  become: 'yes'

- name: 'Install package'
  apt:
    name: 'vim'
    force_apt_get: 'yes'
    state: 'present'
    install_recommends: 'no'
  become: 'yes'

- name: 'Copy configuration file'
  copy:
    src: 'vimrc'
    dest: '{{ ansible_env.HOME }}/.vimrc'
    owner: '{{ ansible_env.USER }}'
    group: '{{ ansible_env.USER }}'
    force: 'yes'
    mode: 0644

- name: 'Ensure {{ vim_plugins_dir }}'
  file:
    path: '{{ vim_plugins_dir }}'
    state: 'directory'
    owner: '{{ ansible_env.USER }}'
    group: '{{ ansible_env.USER }}'
    mode: 0755

- name: 'Cleanup plugin checkout directory'
  file:
    path: '{{ item.git.directory }}/{{ item.git.repo.name }}'
    state: 'absent'
  loop: '{{ vim_plugins }}'
  when: 'item.reinstall | bool'

- name: 'Cleanup plugin repository files under: {{ vim_plugins_dir }}'
  file:
    path: '{{ vim_plugins_dir }}/{{ item.1 }}/{{ item.0.filename }}'
    state: 'absent'
  with_subelements:
    - '{{ vim_plugins }}'
    - 'runtimepath'
  when: 'item.0.reinstall | bool'

- name: 'Ensure plugin directory'
  file:
    path: '{{ item.git.directory }}'
    state: 'directory'
    owner: '{{ ansible_env.USER }}'
    group: '{{ ansible_env.USER }}'
    mode: 0755
  loop: '{{ vim_plugins }}'

- name: 'Checkout VIM plugins'
  git:
    repo: '{{ item.git.proto }}://{{ item.git.host }}/{{ item.git.user }}/{{ item.git.repo.name }}.git'
    dest: '{{ item.git.directory }}/{{ item.git.repo.name }}'
    version: '{{ item.git.repo.version }}'
    accept_hostkey: 'yes'
    update: 'no'
  loop: '{{ vim_plugins }}'

- name: 'Add RF-VIM plugin highlighting for .resource files'
  lineinfile:
    path: '{{ item.git.directory }}/{{ item.git.repo.name }}/ftdetect/{{ item.filename }}'
    regexp: '^au.*?\.robot.*?(?<!\.resource).*?robot$'
    line: 'au BufNewFile,BufRead *.robot,*.resource setlocal filetype=robot'
    state: 'present'
    backup: 'yes'
    owner: '{{ ansible_env.USER }}'
    group: '{{ ansible_env.USER }}'
    mode: 0644
  loop: '{{ vim_plugins }}'
  when: 'item.git.repo.name == "robotframework-vim"'

- name: 'Copy each plugin contents to runtimepath'
  copy:
    src: '{{ item.0.git.directory }}/{{ item.0.git.repo.name }}/{{ item.1 }}/'
    dest: '{{ vim_plugins_dir }}/{{ item.1 }}/'
    force: 'yes'
    owner: '{{ ansible_env.USER }}'
    group: '{{ ansible_env.USER }}'
    mode: 'preserve'
  with_subelements:
    - '{{ vim_plugins }}'
    - 'runtimepath'
...
